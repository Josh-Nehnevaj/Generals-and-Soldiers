<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_soldier4</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

//creates in the proper formation
if global.formation=4
    sprite_index=spr_soldier4
else if global.formation=3
    sprite_index=spr_soldier3
else if global.formation=2
    sprite_index=spr_soldier2
else if global.formation=1
    sprite_index=spr_soldier1
    
// Move down one
move[0,0] = 0;
move[0,1] = 1;

// Move left one
move[1,0] = -1;
move[1,1] = 0;

// Move up one
move[2,0] = 0;
move[2,1] = -1;

// Move right one
move[3,0] = 1;
move[3,1] = 0;

// Move down twice
move[4,0] = 0;
move[4,1] = 2;

// Move left twice
move[5,0] = -2;
move[5,1] = 0;

// Move up twice
move[6,0] = 0;
move[6,1] = -2;

// Move right twice
move[7,0] = 2;
move[7,1] = 0;

// Move down right
move[8,0] = 1;
move[8,1] = 1;

// Move down left
move[9,0] = -1;
move[9,1] = 1;

// Move up left
move[10,0] = -1;
move[10,1] = -1;

// Move up right
move[11,0] = 1;
move[11,1] = -1;

possible_moves = 12;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index=0

//stops firing animation and returns sprite to corresponding formation
if sprite_index=spr_soldier1Firing
    {
    sprite_index=spr_soldier1
    }
else if sprite_index=spr_soldier2Firing
    {
    sprite_index=spr_soldier2
    }
else if sprite_index=spr_soldier3Firing
    {
    sprite_index=spr_soldier3
    }
else if sprite_index=spr_soldier4Firing
    {
    sprite_index=spr_soldier4
    }
    
image_speed=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//starts firing animation if F pressed
if (keyboard_check_pressed(ord('F')) &amp;&amp; speed=0)
    {
    image_index=0
    
    if sprite_index=spr_soldier1
        {
        sprite_index=spr_soldier1Firing
        }
    else if sprite_index=spr_soldier2
        {
        sprite_index=spr_soldier2Firing
        }
    else if sprite_index=spr_soldier3
        {
        sprite_index=spr_soldier3Firing
        }
    else if sprite_index=spr_soldier4
        {
        sprite_index=spr_soldier4Firing
        }
        
    image_speed=.1667
    alarm[0]=30
    }

//starts animation if moving
if speed!=0
    {
    image_speed=.1667
    global.turn=-1
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Destination">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0

if ( speed != 0 )
   {
   global.turn=1
   // Choice determines where to go diagonally
   if ( global.choice == 1 )
      {
      newx = obj_Destination.x + 200;
      newy = obj_Destination.y + 100;
   
      moveDiagonal( newx, newy, self.id );
      }
   else if ( global.choice == 2 )
      {
      newx = obj_Destination.x - 100;
      newy = obj_Destination.y - 200;
   
      moveDiagonal( newx, newy, self.id );   
      }  
   else if ( global.choice == 3 )
      {
      newx = obj_Destination.x - 200;
      newy = obj_Destination.y + 100;
   
      moveDiagonal( newx, newy, self.id ); 
      }
   else if ( global.choice == 4 )
      {
      newx = obj_Destination.x + 100;
      newy = obj_Destination.y - 200;
   
      moveDiagonal( newx, newy, self.id ); 
      }
   else if ( global.choice == 5 )
      {
      newx = obj_Destination.x - 200;
      newy = obj_Destination.y - 100;
   
      moveDiagonal( newx, newy, self.id ); 
      }   
   else if ( global.choice == 6 )
      {
      newx = obj_Destination.x + 100;
      newy = obj_Destination.y + 200;
   
      moveDiagonal( newx, newy, self.id ); 
      }
   else if ( global.choice == 7 )
      {
      newx = obj_Destination.x + 200;
      newy = obj_Destination.y - 100;
   
      moveDiagonal( newx, newy, self.id ); 
      }
   else if ( global.choice == 8 )
      {
      newx = obj_Destination.x - 100;
      newy = obj_Destination.y + 200;
   
      moveDiagonal( newx, newy, self.id ); 
      }
   else
      {
      speed = 0;

      with( obj_Destination )
         {
         instance_destroy();
         }
      }
   global.choice = 0;
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>701</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_score</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//simulates being shot, changes formation
if sprite_index=spr_soldier4
    sprite_index=spr_soldier3
else if sprite_index=spr_soldier3
    sprite_index=spr_soldier2
else if sprite_index=spr_soldier2
    sprite_index=spr_soldier1
else if sprite_index=spr_soldier1
   instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Destroy any currently highlighted objects
with ( obj_Highlight )
   {
   instance_destroy()
   }

// Units can only be selected when not moving and on their turn
if (speed=0 &amp;&amp; global.turn=1)
 highlightPossibleMoves( self.id );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
