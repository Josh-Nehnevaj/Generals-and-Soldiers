<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemyGeneral</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

// Move down one
move[0,0] = 0;
move[0,1] = 1;

// Move left one
move[1,0] = -1;
move[1,1] = 0;

// Move up one
move[2,0] = 0;
move[2,1] = -1;

// Move right one
move[3,0] = 1;
move[3,1] = 0;

// Move down twice
move[4,0] = 0;
move[4,1] = 2;

// Move left twice
move[5,0] = -2;
move[5,1] = 0;

// Move up twice
move[6,0] = 0;
move[6,1] = -2;

// Move right twice
move[7,0] = 2;
move[7,1] = 0;

// Move down right
move[8,0] = 1;
move[8,1] = 1;

// Move down left
move[9,0] = -1;
move[9,1] = 1;

// Move up left
move[10,0] = -1;
move[10,1] = -1;

// Move up right
move[11,0] = 1;
move[11,1] = -1;

possible_moves = 12;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//stops firing animation
image_index=0
sprite_index=spr_enemyGeneral
image_speed=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//starts firing animation
if (keyboard_check_pressed(ord('R')) &amp;&amp; speed=0)
    {
    image_index=0
    sprite_index=spr_enemyGeneralFiring
    image_speed=.1667
    alarm[0]=30
    }
    
//starts animation if in motion
if speed!=0
    {
    image_speed=.1667
    global.turn=-1
    }
//else if (sprite_index!=spr_enemyGeneralFiring &amp;&amp; speed = 0)
    //image_speed=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Destination">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0
image_index=0

if ( speed != 0 )
   {
   global.turn=2
    if ( global.choice == 1 )
       {
       newx = obj_Destination.x + 200;
       newy = obj_Destination.y + 100;
       
       moveDiagonal( newx, newy, self.id );
       }
    else if ( global.choice == 2 )
       {
       newx = obj_Destination.x - 100;
       newy = obj_Destination.y - 200;
       
       moveDiagonal( newx, newy, self.id );   
       }  
    else if ( global.choice == 3 )
       {
       newx = obj_Destination.x - 200;
       newy = obj_Destination.y + 100;
       
       moveDiagonal( newx, newy, self.id ); 
       }
    else if ( global.choice == 4 )
       {
       newx = obj_Destination.x + 100;
       newy = obj_Destination.y - 200;
       
       moveDiagonal( newx, newy, self.id ); 
       }
    else if ( global.choice == 5 )
       {
       newx = obj_Destination.x - 200;
       newy = obj_Destination.y - 100;
       
       moveDiagonal( newx, newy, self.id ); 
       }   
    else if ( global.choice == 6 )
       {
       newx = obj_Destination.x + 100;
       newy = obj_Destination.y + 200;
       
       moveDiagonal( newx, newy, self.id ); 
       }
    else if ( global.choice == 7 )
       {
       newx = obj_Destination.x + 200;
       newy = obj_Destination.y - 100;
       
       moveDiagonal( newx, newy, self.id ); 
       }
    else if ( global.choice == 8 )
       {
       newx = obj_Destination.x - 100;
       newy = obj_Destination.y + 200;
       
       moveDiagonal( newx, newy, self.id ); 
       }
    else
       {
       speed = 0;
    
       with( obj_Destination )
          {
          instance_destroy();
          }
       }
    global.choice = 0;
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//check which congratulatory message to display
if (instance_number (obj_EnemyUnit)=0)   
    global.smallVictory=0
else
    global.smallVictory=1

//tracks number of generals slain    
global.generalsSlain++;

//checks if victory condition achieved
if (global.generalsSlain=4)
    {
    global.largeVictory=1
    room_goto (rm_pause)
    }
else
    room_goto (rm_map)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with ( obj_Highlight )
   {
   instance_destroy()
   }

// Units can only be selected when not moving and on their turn
if (speed=0 &amp;&amp; global.turn=2)
 highlightPossibleMoves( self.id );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
