<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Highlight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Changes the transparency of the sprite
image_alpha = 0.2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.choice = 0;

if global.turn=1
    {
    // If user selects corner
    if ( owner.xx != xx &amp;&amp; owner.yy != yy )
       {
       // create first destination
       instance_create(x,y,obj_Destination)
       // sets choice to determine second destination
       global.choice = moveTwice( owner.xx, owner.yy, xx, yy );
       
       // Change the board original unit to noone
       obj_Board.board[owner.xx,owner.yy] = noone;
    
       // Change owner's xx and yy
       owner.xx = xx;
       owner.yy = yy;
       
       // Move toward first destination object
       with( owner )
          {
          move_towards_point(obj_Destination.x, obj_Destination.y, 5);
          }  
       }
    // If user selects up down left or right
    else
       {
       // Create destination and change where object is moving
       instance_create(x,y,obj_Destination)
       moveOnce( owner.xx, owner.yy, xx, yy );
       
       // Changes the board original unit to noone
       obj_Board.board[owner.xx,owner.yy] = noone;
    
       // Change owner's xx and yy
       owner.xx = xx;
       owner.yy = yy;
    
       // Move toward first destination object
       with ( owner )
          {
          move_towards_point(obj_Destination.x,obj_Destination.y,5);
          }
       }
          
    // Destroy highlighted area     
    with ( obj_Highlight )
       {
       instance_destroy();
       }
    
    // Board location is set equal to owner
    obj_Board.board[xx,yy] = owner;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
